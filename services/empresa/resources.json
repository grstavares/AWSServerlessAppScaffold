{
    "AWSTemplateFormatVersion" : "2010-09-09",
  
    "Description" : "Cloud Formation Template for Site and Log Buckets for StaticWebSite on S3",
  
    "Parameters" : {
        "AppName" : {
          "Type" : "String",
          "Description" : "The Name of the Application",
          "AllowedPattern" : "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
          "ConstraintDescription" : "must be a url compatible."
        },
        "ServiceName" : {
            "Type" : "String",
            "Description" : "The Name of the Microservice",
            "AllowedPattern" : "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
            "ConstraintDescription" : "must be a url compatible."
        },
        "ResourceBucket": {
            "Type" : "String",
            "Description" : "Bucket Name were are stored the source code of Lambda Functions. Must be in the same region were Cloud Formation is being executed!"
        }
    },
  
    "Resources" : {
  
      "ServiceTableName" : {
        "Type" : "AWS::DynamoDB::Table",
        "Properties" : {
            "TableName" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, "empresa"] ] },
            "ProvisionedThroughput": { "ReadCapacityUnits": 5, "WriteCapacityUnits": 5 },
            "KeySchema": [ { "AttributeName": "empresaId", "KeyType": "HASH" }],
            "AttributeDefinitions": [
                { "AttributeName": "empresaId", "AttributeType": "S" },
                { "AttributeName": "nome", "AttributeType": "S" },
                { "AttributeName": "alias", "AttributeType": "S" }
                ]
            }
        },

        "MainFunction": {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
              "Code" : {"S3Bucket" : {"Ref": "ResourceBucket"}, "S3Key" : "services/empresa/main.zip"},
              "Description" : { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, { "Ref" : "ServiceName" }, "-Main Function"] ] },
              "Handler" : "main.handler",
              "MemorySize" : 128,
              "Role" : { "Fn::GetAtt" : ["MainFunctionExecutionRole", "Arn"] },
              "Environment" : { "Variables" : { "DYNAMO_TABLE": { "Ref" : "ServiceTableName" } } },
              "Runtime" : "nodejs8.10",
              "Timeout" : 10
            }
        },

        "MainFunctionExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{ "Effect": "Allow", "Principal": {"Service": ["lambda.amazonaws.com"]}, "Action": ["sts:AssumeRole"] }]
              },
              "Path": "/",
              "Policies": [{
                "PolicyName": "root",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": { "Fn::GetAtt" : ["ServiceTableName", "Arn"] } ,
                        "Action": [
                            "dynamodb:GetItem", "dynamodb:Query", "dynamodb:Scan",
                            "dynamodb:BatchGetItem", "dynamodb:BatchWriteItem",
                            "dynamodb:PutItem", "dynamodb:UpdateItem", "dynamodb:DeleteItem"
                        ]},
                        {
                        "Effect": "Allow",
                        "Resource": "*" ,
                        "Action": ["logs:CreateLogGroup", "logs:PutLogEvents", "logs:CreateLogStream"]
                        }
                    ]
                }
              }]
            }
        }
    },
  
    "Outputs" : {
      
      "TableName" : {
        "Value" : { "Ref": "ServiceTableName" },
        "Description" : "DynamoDB Table Name"
      }

    }

}